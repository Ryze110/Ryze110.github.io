import{_ as i,o as s,c as a,a as l,t as n,e}from"./app-UfWKxtAj.js";const t={},o=e('<h2 id="微信小程序是什么" tabindex="-1"><a class="header-anchor" href="#微信小程序是什么"><span>微信小程序是什么</span></a></h2><ul><li>简介：小程序是一种全新的连接用户与服务的方式，它可以在微信内被便捷地获取和传播，同时具有出色的使用体验。</li><li>发展史： JS API =&gt; JS-SDK =&gt; 微信小程序</li><li>小程序与普通网页开发的区别 <ul><li>网页开发渲染线程和脚本线程是互斥的，而在小程序中，二者是分开的，分别运行在不同的线程中。</li><li>网页开发者可以使用到各种浏览器暴露出来的 DOM API，进行 DOM 选中和操作。而如上文所述，小程序的逻辑层和渲染层是分开的，逻辑层运行在 JSCore 中，并没有一个完整浏览器对象，因而缺少相关的DOM API和BOM API。</li><li>运行环境也有较大的区别</li></ul></li></ul><h2 id="小程序的代码构成" tabindex="-1"><a class="header-anchor" href="#小程序的代码构成"><span>小程序的代码构成</span></a></h2><h3 id="json-后缀的-json-配置文件" tabindex="-1"><a class="header-anchor" href="#json-后缀的-json-配置文件"><span><code>.json</code> 后缀的 <code>JSON</code> 配置文件</span></a></h3><ul><li>小程序配置 app.json <ul><li>pages字段 —— 用于描述当前小程序所有页面路径，这是为了让微信客户端知道当前你的小程序页面定义在哪个目录。</li><li>window字段 —— 定义小程序所有页面的顶部背景颜色，文字颜色定义等。</li></ul></li><li>开发工具配置 project.config.json</li><li>页面配置 page.json</li></ul><h3 id="wxml-后缀的-wxml-模板文件" tabindex="-1"><a class="header-anchor" href="#wxml-后缀的-wxml-模板文件"><span><code>.wxml</code> 后缀的 <code>WXML</code> 模板文件</span></a></h3><p>和 HTML 非常相似，WXML 由标签、属性等等构成。但是也有很多不一样的地方</p>',7),r=l("li",null,"小程序的 WXML 用的标签是 view, button, text 等等",-1),c=e('<h3 id="wxss-后缀的-wxss-样式文件" tabindex="-1"><a class="header-anchor" href="#wxss-后缀的-wxss-样式文件"><span><code>.wxss</code> 后缀的 <code>WXSS</code> 样式文件</span></a></h3><ul><li>新增尺寸单位 <code>rpx</code></li><li>提供了全局的样式app.wxss和局部样式page.wxss。</li><li>WXSS 仅支持部分 CSS 选择器</li></ul><h3 id="js-后缀的-js-脚本逻辑文件" tabindex="-1"><a class="header-anchor" href="#js-后缀的-js-脚本逻辑文件"><span><code>.js</code> 后缀的 <code>JS</code> 脚本逻辑文件</span></a></h3><ul><li>用于和用户交互</li><li>可以在JS中调用小程序提供的API</li></ul><h2 id="小程序的宿主环境" tabindex="-1"><a class="header-anchor" href="#小程序的宿主环境"><span>小程序的宿主环境</span></a></h2><p>小程序的宿主环境即为微信客户端给小程序所提供的环境。</p><h3 id="渲染层和逻辑层" tabindex="-1"><a class="header-anchor" href="#渲染层和逻辑层"><span>渲染层和逻辑层</span></a></h3><ul><li>小程序的渲染层和逻辑层分别由2个线程管理： <ul><li>渲染层的界面使用了WebView 进行渲染；</li><li>逻辑层采用JsCore线程运行JS脚本。</li></ul></li><li>一个小程序存在多个界面，所以渲染层存在多个WebView线程，这两个线程的通信会经由微信客户端做中转，逻辑层发送网络请求也经由微信客户端转发</li></ul><h3 id="程序和页面" tabindex="-1"><a class="header-anchor" href="#程序和页面"><span>程序和页面</span></a></h3><p>程序的加载</p><ul><li>微信客户端在打开小程序之前，会把整个小程序的代码包下载到本地。</li><li>紧接着通过 app.json 的 pages 字段就可以知道你当前小程序的所有页面路径。</li><li>写在 pages 字段的第一个页面就是这个小程序的首页。</li><li>微信客户端把首页的代码装载进来，通过小程序底层的一些机制，就可以渲染出这个首页</li><li>整个小程序只有一个 App 实例，是全部页面共享的</li></ul><p>页面的构建</p><p>微信客户端会先根据 json 文件中的配置生成一个界面，顶部的颜色和文字你都可以在这个 json 文件里边定义好。紧接着客户端就会装载这个页面的 WXML 结构和 WXSS 样式。最后客户端会装载 js 文件</p><p>Page 是一个页面构造器，这个构造器就生成了一个页面。在生成页面的时候，小程序框架会把 data 数据和 index.wxml 一起渲染出最终的结构，于是就得到了你看到的小程序的样子。</p><h3 id="组件和api" tabindex="-1"><a class="header-anchor" href="#组件和api"><span>组件和API</span></a></h3><ul><li>小程序提供了丰富的基础组件给开发者自由组合</li><li>小程序提供了很多 API 让开发者方便的调用微信提供的能力</li><li>多数 API 的回调都是异步</li></ul>',16);function d(h,p){return s(),a("div",null,[o,l("ul",null,[r,l("li",null,"使用"+n()+"进行数据绑定",1)]),c])}const x=i(t,[["render",d],["__file","wechat-program-intro.html.vue"]]),w=JSON.parse('{"path":"/blogs_1/frontend/2019/wechat-program-intro.html","title":"初识微信小程序","lang":"en-US","frontmatter":{"title":"初识微信小程序","date":"2019-12-25T00:00:00.000Z","tags":["前端","微信小程序"],"categories":["前端"]},"headers":[{"level":2,"title":"微信小程序是什么","slug":"微信小程序是什么","link":"#微信小程序是什么","children":[]},{"level":2,"title":"小程序的代码构成","slug":"小程序的代码构成","link":"#小程序的代码构成","children":[{"level":3,"title":".json 后缀的 JSON 配置文件","slug":"json-后缀的-json-配置文件","link":"#json-后缀的-json-配置文件","children":[]},{"level":3,"title":".wxml 后缀的 WXML 模板文件","slug":"wxml-后缀的-wxml-模板文件","link":"#wxml-后缀的-wxml-模板文件","children":[]},{"level":3,"title":".wxss 后缀的 WXSS 样式文件","slug":"wxss-后缀的-wxss-样式文件","link":"#wxss-后缀的-wxss-样式文件","children":[]},{"level":3,"title":".js 后缀的 JS 脚本逻辑文件","slug":"js-后缀的-js-脚本逻辑文件","link":"#js-后缀的-js-脚本逻辑文件","children":[]}]},{"level":2,"title":"小程序的宿主环境","slug":"小程序的宿主环境","link":"#小程序的宿主环境","children":[{"level":3,"title":"渲染层和逻辑层","slug":"渲染层和逻辑层","link":"#渲染层和逻辑层","children":[]},{"level":3,"title":"程序和页面","slug":"程序和页面","link":"#程序和页面","children":[]},{"level":3,"title":"组件和API","slug":"组件和api","link":"#组件和api","children":[]}]}],"git":{},"filePathRelative":"blogs_1/frontend/2019/wechat-program-intro.md"}');export{x as comp,w as data};
