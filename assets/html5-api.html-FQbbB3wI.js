import{_ as n,o as s,c as a,e as t}from"./app-UfWKxtAj.js";const e={},p=t(`<h2 id="获取页面元素" tabindex="-1"><a class="header-anchor" href="#获取页面元素"><span>获取页面元素</span></a></h2><ul><li><p><code>document.querySelector(&quot;选择器&quot;);</code></p><ul><li>选择器可以是css中的任意一种选择器</li><li>通过该选择器只能选中第一个元素</li></ul></li><li><p><code>document.querySelectorAll(&quot;选择器&quot;);</code></p><ul><li>querySelectorAll会返回所有符合选择器规则的元素列表</li><li>querySelector返回的只是单独的一个元素</li></ul></li></ul><h2 id="类名操作" tabindex="-1"><a class="header-anchor" href="#类名操作"><span>类名操作</span></a></h2><ul><li>给当前dom元素添加类样式：<code>Dom.classList.add(&quot;类名&quot;)</code></li><li>给当前dom元素移除类样式：<code>Dom.classList.remove(&quot;类名&quot;)</code></li><li>检测是否包含类样式：<code>classList.contains(&quot;类名&quot;)</code></li><li>切换类样式（有就删除，没有就添加）：<code>classList.toggle(&quot;active&quot;)</code></li></ul><h2 id="自定义属性" tabindex="-1"><a class="header-anchor" href="#自定义属性"><span>自定义属性</span></a></h2><p>在标签中可以通过 <code>data-自定义属性名</code> 来自定义属性</p><ul><li>获取自定义属性<br> Dom.dataset.属性名或者Dom.dataset[属性名]<br> Dom.dataset返回的是一个对象</li><li>设置自定义属性<br> Dom.dataset.自定义属性名=值 或者 Dom.dataset[自定义属性名]=值</li><li>标签中为data-test-name=&quot;123&quot;时，获取时要用Dom.dataset.testName</li></ul><h2 id="文件读取" tabindex="-1"><a class="header-anchor" href="#文件读取"><span>文件读取</span></a></h2><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line">上传头像(请上传png jpg gif ico格式的文件)</span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>input</span> <span class="token attr-name">type</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>file<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>upLoadImg<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>showLogo<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">width</span><span class="token punctuation">:</span>150px<span class="token punctuation">;</span><span class="token property">height</span><span class="token punctuation">:</span>150px<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>head.png<span class="token punctuation">&quot;</span></span><span class="token punctuation">/&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">  <span class="token keyword">var</span> file_btn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#upLoadImg&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token keyword">var</span> logo_wrap <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;#showLogo&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  file_btn<span class="token punctuation">.</span><span class="token function-variable function">onchange</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token comment">//判断后缀名是否合法</span></span>
<span class="line">    <span class="token keyword">var</span> filename <span class="token operator">=</span> file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span>file<span class="token punctuation">.</span>name<span class="token punctuation">.</span><span class="token function">lastIndexOf</span><span class="token punctuation">(</span><span class="token string">&quot;.&quot;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> imgs <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">&quot;.png&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.jpg&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;gif&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;.ico&quot;</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">var</span> flag <span class="token operator">=</span> <span class="token boolean">false</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token keyword">var</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> imgs<span class="token punctuation">.</span>length<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">if</span> <span class="token punctuation">(</span>imgs<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> filename<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        flag<span class="token operator">=</span><span class="token boolean">true</span><span class="token punctuation">;</span></span>
<span class="line">        <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">    <span class="token keyword">if</span> <span class="token punctuation">(</span>flag<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token keyword">var</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      reader<span class="token punctuation">.</span><span class="token function">readAsDataURL</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">      reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span> <span class="token operator">=</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">        logo_wrap<span class="token punctuation">.</span>src <span class="token operator">=</span> reader<span class="token punctuation">.</span>result<span class="token punctuation">;</span></span>
<span class="line">      <span class="token punctuation">}</span></span>
<span class="line">    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">      <span class="token function">alert</span><span class="token punctuation">(</span><span class="token string">&quot;文件类型不正确，请重新选择&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token punctuation">}</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li><code>FileReader</code> 有三个方法用来读取文件方法，返回结果在result中 <ul><li>readAsBinaryString --- 将文件读取为二进制编码</li><li>readAsText --- 将文件读取为文本</li><li>readAsDataURL --- 将文件读取为DataURL</li></ul></li><li><code>FileReader</code>提供的事件模型 <ul><li>onabort 中断时触发</li><li>onerror 出错时触发</li><li>onload 文件读取成功完成时触发</li><li>onloadend 读取完成触发，无论成功或失败</li><li>onloadstart 读取开始时触发</li><li>onprogress 读取中</li></ul></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token comment">// 获取到文件</span></span>
<span class="line"><span class="token keyword">var</span> file <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>files<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 创建读取器</span></span>
<span class="line"><span class="token keyword">var</span> reader <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">FileReader</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 开始读取</span></span>
<span class="line">reader<span class="token punctuation">.</span><span class="token function">readAsText</span><span class="token punctuation">(</span>file<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token comment">// 获取读取的结果</span></span>
<span class="line"><span class="token comment">// 当文件读取完成后，才可以获取文件信息内容</span></span>
<span class="line">reader<span class="token punctuation">.</span><span class="token function-variable function">onload</span><span class="token operator">=</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>reader<span class="token punctuation">.</span>result<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span>	</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取网络状态" tabindex="-1"><a class="header-anchor" href="#获取网络状态"><span>获取网络状态</span></a></h2><ul><li>获取网络状态 <code>window.navigator.onLine</code> 返回一个布尔值</li><li>网络状态事件 <ul><li>window.ononline</li><li>window.onoffline</li></ul></li></ul><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line">当前网络状态 : <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>onlineStatus<span class="token punctuation">&quot;</span></span> <span class="token special-attr"><span class="token attr-name">style</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span><span class="token value css language-css"><span class="token property">color</span><span class="token punctuation">:</span> #f3f<span class="token punctuation">;</span></span><span class="token punctuation">&quot;</span></span></span><span class="token punctuation">&gt;</span></span>--<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">&gt;</span></span>  </span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript"></span>
<span class="line">  <span class="token keyword">var</span> state <span class="token operator">=</span> window<span class="token punctuation">.</span>navigator<span class="token punctuation">.</span>onLine</span>
<span class="line">  <span class="token keyword">var</span> osid <span class="token operator">=</span> <span class="token string">&#39;#onlineStatus&#39;</span></span>
<span class="line">  <span class="token keyword">if</span> <span class="token punctuation">(</span>state<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>osid<span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;在线呢！&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span></span>
<span class="line">    document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>osid<span class="token punctuation">)</span><span class="token punctuation">.</span>innerText <span class="token operator">=</span> <span class="token string">&#39;掉线啦！&#39;</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line"></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="获取地理位置" tabindex="-1"><a class="header-anchor" href="#获取地理位置"><span>获取地理位置</span></a></h2><ul><li><p>获取当前地理位置</p><p><code>window.navigator.geolocation.getCurrentPosition(success,error);</code></p><ul><li>如果getCurrentPosition()运行成功，则向参数success中规定的函数返回一个coordinates对象<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">function</span> <span class="token function">success</span><span class="token punctuation">(</span><span class="token parameter">position</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// position.coords.latitude --&gt; 十进制的纬度</span></span>
<span class="line">  <span class="token comment">// position.coords.longitude --&gt; 十进制的经度</span></span>
<span class="line">  <span class="token comment">// position.coords.accuracy --&gt; 位置精度</span></span>
<span class="line">  <span class="token comment">// position.coords.altitude --&gt; 海拔，海平面以上以米计</span></span>
<span class="line">  <span class="token comment">// position.coords.altitudeAccuracy --&gt; 位置的海拔精度</span></span>
<span class="line">  <span class="token comment">// position.coords.heading --&gt; 方向，从正北开始以度计</span></span>
<span class="line">  <span class="token comment">// position.coords.speed --&gt; 速度，以米/每秒计</span></span>
<span class="line">  <span class="token comment">// position.timestamp --&gt; 响应的日期/时间</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li><li>如果getCurrentPosition()运行失败，则向参数error中规定的函数返回错误信息<div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">function</span> <span class="token function">error</span><span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token keyword">let</span> msg <span class="token operator">=</span> <span class="token string">&#39;&#39;</span></span>
<span class="line">  <span class="token keyword">switch</span> <span class="token punctuation">(</span>error<span class="token punctuation">.</span>code<span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">    <span class="token keyword">case</span> error<span class="token punctuation">.</span><span class="token constant">PERMISSION_DENIED</span><span class="token operator">:</span></span>
<span class="line">      msg <span class="token operator">=</span> <span class="token string">&quot;用户拒绝对获取地理位置的请求。&quot;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> error<span class="token punctuation">.</span><span class="token constant">POSITION_UNAVAILABLE</span><span class="token operator">:</span></span>
<span class="line">      msg <span class="token operator">=</span> <span class="token string">&quot;位置信息是不可用的。&quot;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> error<span class="token punctuation">.</span><span class="token constant">TIMEOUT</span><span class="token operator">:</span></span>
<span class="line">      msg <span class="token operator">=</span> <span class="token string">&quot;请求用户地理位置超时。&quot;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">    <span class="token keyword">case</span> error<span class="token punctuation">.</span><span class="token constant">UNKNOWN_ERROR</span><span class="token operator">:</span></span>
<span class="line">      msg <span class="token operator">=</span> <span class="token string">&quot;未知错误。&quot;</span></span>
<span class="line">      <span class="token keyword">break</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token punctuation">}</span></span>
<span class="line">  <span class="token function">alert</span><span class="token punctuation">(</span>msg<span class="token punctuation">)</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul></li><li><p>返回用户的当前位置，并继续返回用户移动时的更新位置</p><p><code>window.navigator.geolocation.watchPosition(success,error);</code></p></li><li><p>使用 <code>clearWatch()</code> 可以停止 <code>watchPosition()</code> 方法</p></li></ul><h2 id="本地存储" tabindex="-1"><a class="header-anchor" href="#本地存储"><span>本地存储</span></a></h2><h3 id="localstorage" tabindex="-1"><a class="header-anchor" href="#localstorage"><span>localStorage</span></a></h3><ul><li>永久生效</li><li>多窗口共享</li><li>容量大约为20M</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">🎈window.localStorage.setItem(key,value) --&gt; 设置存储内容</span>
<span class="line"></span>
<span class="line">🎈window.localStorage.getItem(key) --&gt; 获取内容</span>
<span class="line"></span>
<span class="line">🎈window.localStorage.removeItem(key) --&gt; 删除内容</span>
<span class="line"></span>
<span class="line">🎈window.localStorage.clear() --&gt; 清空内容</span>
<span class="line"></span>
<span class="line">🎈window.localStorage.key(index) --&gt; 获取指定索引位置数据项的键名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="sessionstorage" tabindex="-1"><a class="header-anchor" href="#sessionstorage"><span>sessionStorage</span></a></h3><ul><li>生命周期为关闭当前浏览器窗口</li><li>可以在同一个窗口下访问</li><li>数据大小为5M左右</li></ul><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code><span class="line">🎈window.sessionStorage.setItem(key,value) --&gt; 设置存储内容</span>
<span class="line"></span>
<span class="line">🎈window.sessionStorage.getItem(key) --&gt; 获取内容</span>
<span class="line"></span>
<span class="line">🎈window.sessionStorage.removeItem(key) --&gt; 删除内容</span>
<span class="line"></span>
<span class="line">🎈window.sessionStorage.clear() --&gt; 清空内容</span>
<span class="line"></span>
<span class="line">🎈window.sessionStorage.key(index) --&gt; 获取指定索引位置数据项的键名</span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="拖放" tabindex="-1"><a class="header-anchor" href="#拖放"><span>拖放</span></a></h2><ul><li>设置元素为可拖放<div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li>在拖放的过程中会触发以下事件 <ul><li>ondragstart - 用户开始拖动元素时触发</li><li>ondrag - 元素正在拖动时触发</li><li>ondragend - 用户完成元素拖动后触发</li></ul></li><li>释放目标时触发的事件: <ul><li>ondragenter - 当被鼠标拖动的对象进入其容器范围内时触发此事件</li><li>ondragover - 当某被拖动的对象在另一对象容器范围内拖动时触发此事件</li><li>ondragleave - 当被鼠标拖动的对象离开其容器范围内时触发此事件</li><li>ondrop - 在一个拖动过程中，释放鼠标键时触发此事件</li></ul></li><li>在拖动元素时，每隔 350 毫秒会触发 ondragover 事件</li><li>实例 <ol><li>首先设置draggable=&quot;true&quot;使元素可拖动</li></ol><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ondrop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drop(event)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ondragover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allowDrop(event)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line">  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>img</span> <span class="token attr-name">src</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>1.png<span class="token punctuation">&quot;</span></span> <span class="token attr-name">draggable</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>true<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ondragstart</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drag(event)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drag1<span class="token punctuation">&quot;</span></span> <span class="token attr-name">width</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span> <span class="token attr-name">height</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>100<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>div</span> <span class="token attr-name">id</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>div2<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ondrop</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>drop(event)<span class="token punctuation">&quot;</span></span> <span class="token attr-name">ondragover</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>allowDrop(event)<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>div</span><span class="token punctuation">&gt;</span></span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="2"><li>开始拖动时设置被拖数据的数据类型和值</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">function</span> <span class="token function">drag</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span><span class="token string">&quot;Text&quot;</span><span class="token punctuation">,</span> ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="3"><li>规定在何处放置被拖动的数据</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">function</span> <span class="token function">allowDrop</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">//默认地，无法将数据/元素放置到其他元素中。</span></span>
<span class="line">  <span class="token comment">//如果需要设置允许放置，我们必须阻止对元素的默认处理方式。</span></span>
<span class="line">  <span class="token comment">//调用 ondragover 事件的 event.preventDefault() 方法设置允许放置</span></span>
<span class="line">  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span>    </span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ol start="4"><li>放置被拖数据</li></ol><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="line"><span class="token keyword">function</span> <span class="token function">drop</span><span class="token punctuation">(</span><span class="token parameter">ev</span><span class="token punctuation">)</span> <span class="token punctuation">{</span></span>
<span class="line">  <span class="token comment">// 调用 preventDefault() 来避免浏览器对数据的默认处理（drop 事件的默认行为是以链接形式打开）</span></span>
<span class="line">  ev<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 通过 dataTransfer.getData(&quot;Text&quot;) 方法获得被拖的数据。该方法将返回在 setData() 方法中设置为相同类型的任何数据。</span></span>
<span class="line">  <span class="token keyword">var</span> data <span class="token operator">=</span> ev<span class="token punctuation">.</span>dataTransfer<span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token string">&quot;Text&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line">  <span class="token comment">// 把被拖元素追加到放置元素（目标元素）中</span></span>
<span class="line">  ev<span class="token punctuation">.</span>target<span class="token punctuation">.</span><span class="token function">appendChild</span><span class="token punctuation">(</span>document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span></span>
<span class="line"><span class="token punctuation">}</span></span>
<span class="line"></span></code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h2 id="websocket" tabindex="-1"><a class="header-anchor" href="#websocket"><span>WebSocket</span></a></h2><h3 id="介绍" tabindex="-1"><a class="header-anchor" href="#介绍"><span>介绍</span></a></h3><ul><li><code>WebSocket</code> 是HTML5开始提供的一种在单个 TCP 连接上进行全双工通讯的协议。</li><li>获取 <code>WebSocket</code> 连接后，可以通过 <code>send()</code> 方法来向服务器发送数据，并通过 <code>onmessage</code> 事件来接收服务器返回的数据。</li><li>创建方法 <code>var Socket = new WebSocket(url, [protocal] );</code><ul><li><code>url</code>： 连接的 URL</li><li><code>protocal</code>： 可接受的协议（可选参数）</li></ul></li></ul><h3 id="属性" tabindex="-1"><a class="header-anchor" href="#属性"><span>属性</span></a></h3><ul><li><code>readyState</code> 只读属性，表示连接状态 <ul><li>0：表示连接尚未建立。</li><li>1：表示连接已建立，可以进行通信。</li><li>2：表示连接正在进行关闭。</li><li>3：表示连接已经关闭或者连接不能打开。</li></ul></li><li><code>bufferedAmount</code> 只读属性，表示已被 <code>send()</code> 放入正在队列中等待传输，但是还没有发出的 <code>UTF-8</code> 文本字节数</li></ul><h3 id="事件" tabindex="-1"><a class="header-anchor" href="#事件"><span>事件</span></a></h3><ul><li><code>onopen</code> 连接建立时触发</li><li><code>onmessage</code> 客户端接收服务端数据时触发</li><li><code>onerror</code> 通信发生错误时触发</li><li><code>onclose</code> 连接关闭时触发</li></ul><h3 id="方法" tabindex="-1"><a class="header-anchor" href="#方法"><span>方法</span></a></h3><ul><li><code>send()</code> 使用连接发送数据</li><li><code>close()</code> 关闭连接</li></ul>`,34),l=[p];function o(c,i){return s(),a("div",null,l)}const r=n(e,[["render",o],["__file","html5-api.html.vue"]]),d=JSON.parse('{"path":"/blogs_1/frontend/2019/html5-api.html","title":"HTML5中的API","lang":"en-US","frontmatter":{"title":"HTML5中的API","date":"2019-09-14T00:00:00.000Z","tags":["前端","HTML5"],"categories":["前端"]},"headers":[{"level":2,"title":"获取页面元素","slug":"获取页面元素","link":"#获取页面元素","children":[]},{"level":2,"title":"类名操作","slug":"类名操作","link":"#类名操作","children":[]},{"level":2,"title":"自定义属性","slug":"自定义属性","link":"#自定义属性","children":[]},{"level":2,"title":"文件读取","slug":"文件读取","link":"#文件读取","children":[]},{"level":2,"title":"获取网络状态","slug":"获取网络状态","link":"#获取网络状态","children":[]},{"level":2,"title":"获取地理位置","slug":"获取地理位置","link":"#获取地理位置","children":[]},{"level":2,"title":"本地存储","slug":"本地存储","link":"#本地存储","children":[{"level":3,"title":"localStorage","slug":"localstorage","link":"#localstorage","children":[]},{"level":3,"title":"sessionStorage","slug":"sessionstorage","link":"#sessionstorage","children":[]}]},{"level":2,"title":"拖放","slug":"拖放","link":"#拖放","children":[]},{"level":2,"title":"WebSocket","slug":"websocket","link":"#websocket","children":[{"level":3,"title":"介绍","slug":"介绍","link":"#介绍","children":[]},{"level":3,"title":"属性","slug":"属性","link":"#属性","children":[]},{"level":3,"title":"事件","slug":"事件","link":"#事件","children":[]},{"level":3,"title":"方法","slug":"方法","link":"#方法","children":[]}]}],"git":{},"filePathRelative":"blogs_1/frontend/2019/html5-api.md"}');export{r as comp,d as data};
